// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshots __tests__\\test-data\\example-src\\action.ts 1`] = `
Map {
  "_endAction" => Set {
    "../internal",
    "./derivation",
  },
  "executeAction" => Set {
    "../internal",
    "./derivation",
  },
  "createAction" => Set {
    "../internal",
    "./derivation",
  },
  "allowStateChangesStart" => Set {
    "../internal",
  },
  "allowStateChangesEnd" => Set {
    "../internal",
  },
  "allowStateChangesInsideComputed" => Set {
    "../internal",
  },
  "allowStateChanges" => Set {
    "../internal",
  },
  "_startAction" => Set {
    "../internal",
    "./derivation",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\actiondecorator.ts 1`] = `
Map {
  "namedActionDecorator" => Set {
    "../internal",
  },
  "actionFieldDecorator" => Set {
    "../internal",
  },
  "boundActionDecorator" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\atom.ts 1`] = `
Map {
  "isAtom" => Set {
    "../internal",
  },
  "createAtom" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\autorun.ts 1`] = `
Map {
  "autorun" => Set {
    "../internal",
  },
  "reaction" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\become-observed.ts 1`] = `
Map {
  "onBecomeObserved" => Set {
    "../internal",
  },
  "onBecomeUnobserved" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\comparer.ts 1`] = `
Map {
  "comparer" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\computed.ts 1`] = `
Map {
  "computed" => Set {
    "../internal",
  },
  "computedDecorator" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\computedvalue.ts 1`] = `
Map {
  "isComputedValue" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\configure.ts 1`] = `
Map {
  "configure" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\decorate.ts 1`] = `
Map {
  "decorate" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\decorators.ts 1`] = `
Map {
  "createPropDecorator" => Set {
    "../internal",
  },
  "initializeInstance" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\derivation.ts 1`] = `
Map {
  "checkIfStateModificationsAreAllowed" => Set {
    "../internal",
  },
  "checkIfStateReadsAreAllowed" => Set {
    "../internal",
  },
  "trackDerivedFunction" => Set {
    "../internal",
  },
  "shouldCompute" => Set {
    "../internal",
  },
  "isComputingDerivation" => Set {
    "../internal",
  },
  "untrackedStart" => Set {
    "../internal",
  },
  "untrackedEnd" => Set {
    "../internal",
  },
  "allowStateReadsStart" => Set {
    "../internal",
  },
  "allowStateReadsEnd" => Set {
    "../internal",
  },
  "untracked" => Set {
    "../internal",
  },
  "clearObserving" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\dynamicobject.ts 1`] = `
Map {
  "createDynamicObservableObject" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\eq.ts 1`] = `
Map {
  "deepEqual" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\extendobservable.ts 1`] = `
Map {
  "extendObservable" => Set {
    "../internal",
    "./observabledecorator",
    "../utils/utils",
  },
  "getDefaultDecoratorFromObjectOptions" => Set {
    "../internal",
    "./observabledecorator",
  },
  "extendObservableObjectWithProperties" => Set {
    "../internal",
    "../utils/utils",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\extras.ts 1`] = `
Map {
  "getObserverTree" => Set {
    "../internal",
  },
  "getDependencyTree" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\flow.ts 1`] = `
Map {
  "flow" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\globalstate.ts 1`] = `
Map {
  "globalState" => Set {
    "../internal",
  },
  "isolateGlobalState" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\intercept.ts 1`] = `
Map {
  "intercept" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\intercept-read.ts 1`] = `
Map {
  "interceptReads" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\intercept-utils.ts 1`] = `
Map {
  "registerInterceptor" => Set {
    "../internal",
  },
  "interceptChange" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\internal.ts 1`] = `Map {}`;

exports[`snapshots __tests__\\test-data\\example-src\\iscomputed.ts 1`] = `
Map {
  "_isComputed" => Set {
    "../internal",
  },
  "isComputed" => Set {
    "../internal",
  },
  "isComputedProp" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\isobservable.ts 1`] = `
Map {
  "isObservable" => Set {
    "../internal",
  },
  "isObservableProp" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\iterable.ts 1`] = `Map {}`;

exports[`snapshots __tests__\\test-data\\example-src\\listen-utils.ts 1`] = `
Map {
  "registerListener" => Set {
    "../internal",
  },
  "notifyListeners" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\mobx.ts 1`] = `
Map {
  "IObservable" => Set {
    "./internal",
  },
  "IDepTreeNode" => Set {
    "./internal",
  },
  "Reaction" => Set {
    "./internal",
  },
  "IReactionPublic" => Set {
    "./internal",
  },
  "IReactionDisposer" => Set {
    "./internal",
  },
  "IDerivation" => Set {
    "./internal",
  },
  "untracked" => Set {
    "./internal",
  },
  "IDerivationState" => Set {
    "./internal",
  },
  "IAtom" => Set {
    "./internal",
  },
  "createAtom" => Set {
    "./internal",
  },
  "IAction" => Set {
    "./internal",
  },
  "spy" => Set {
    "./internal",
  },
  "IComputedValue" => Set {
    "./internal",
  },
  "IEqualsComparer" => Set {
    "./internal",
  },
  "comparer" => Set {
    "./internal",
  },
  "IEnhancer" => Set {
    "./internal",
  },
  "IInterceptable" => Set {
    "./internal",
  },
  "IInterceptor" => Set {
    "./internal",
  },
  "IListenable" => Set {
    "./internal",
  },
  "IObjectWillChange" => Set {
    "./internal",
  },
  "IObjectDidChange" => Set {
    "./internal",
  },
  "IObservableObject" => Set {
    "./internal",
  },
  "isObservableObject" => Set {
    "./internal",
  },
  "IValueDidChange" => Set {
    "./internal",
  },
  "IValueWillChange" => Set {
    "./internal",
  },
  "IObservableValue" => Set {
    "./internal",
  },
  "isBoxedObservable" => Set {
    "./internal",
  },
  "IObservableArray" => Set {
    "./internal",
  },
  "IArrayWillChange" => Set {
    "./internal",
  },
  "IArrayWillSplice" => Set {
    "./internal",
  },
  "IArrayChange" => Set {
    "./internal",
  },
  "IArraySplice" => Set {
    "./internal",
  },
  "isObservableArray" => Set {
    "./internal",
  },
  "IKeyValueMap" => Set {
    "./internal",
  },
  "ObservableMap" => Set {
    "./internal",
  },
  "IMapEntries" => Set {
    "./internal",
  },
  "IMapEntry" => Set {
    "./internal",
  },
  "IMapWillChange" => Set {
    "./internal",
  },
  "IMapDidChange" => Set {
    "./internal",
  },
  "isObservableMap" => Set {
    "./internal",
  },
  "IObservableMapInitialValues" => Set {
    "./internal",
  },
  "ObservableSet" => Set {
    "./internal",
  },
  "isObservableSet" => Set {
    "./internal",
  },
  "ISetDidChange" => Set {
    "./internal",
  },
  "ISetWillChange" => Set {
    "./internal",
  },
  "IObservableSetInitialValues" => Set {
    "./internal",
  },
  "transaction" => Set {
    "./internal",
  },
  "observable" => Set {
    "./internal",
  },
  "IObservableFactory" => Set {
    "./internal",
  },
  "IObservableFactories" => Set {
    "./internal",
  },
  "computed" => Set {
    "./internal",
  },
  "IComputed" => Set {
    "./internal",
  },
  "isObservable" => Set {
    "./internal",
  },
  "isObservableProp" => Set {
    "./internal",
  },
  "isComputed" => Set {
    "./internal",
  },
  "isComputedProp" => Set {
    "./internal",
  },
  "extendObservable" => Set {
    "./internal",
  },
  "observe" => Set {
    "./internal",
  },
  "intercept" => Set {
    "./internal",
  },
  "autorun" => Set {
    "./internal",
  },
  "IAutorunOptions" => Set {
    "./internal",
  },
  "reaction" => Set {
    "./internal",
  },
  "IReactionOptions" => Set {
    "./internal",
  },
  "when" => Set {
    "./internal",
  },
  "IWhenOptions" => Set {
    "./internal",
  },
  "action" => Set {
    "./internal",
  },
  "isAction" => Set {
    "./internal",
  },
  "runInAction" => Set {
    "./internal",
  },
  "IActionFactory" => Set {
    "./internal",
  },
  "keys" => Set {
    "./internal",
  },
  "values" => Set {
    "./internal",
  },
  "entries" => Set {
    "./internal",
  },
  "set" => Set {
    "./internal",
  },
  "remove" => Set {
    "./internal",
  },
  "has" => Set {
    "./internal",
  },
  "get" => Set {
    "./internal",
  },
  "decorate" => Set {
    "./internal",
  },
  "configure" => Set {
    "./internal",
  },
  "onBecomeObserved" => Set {
    "./internal",
  },
  "onBecomeUnobserved" => Set {
    "./internal",
  },
  "flow" => Set {
    "./internal",
  },
  "FlowCancellationError" => Set {
    "./internal",
  },
  "isFlowCancellationError" => Set {
    "./internal",
  },
  "toJS" => Set {
    "./internal",
  },
  "trace" => Set {
    "./internal",
  },
  "IObserverTree" => Set {
    "./internal",
  },
  "IDependencyTree" => Set {
    "./internal",
  },
  "getDependencyTree" => Set {
    "./internal",
  },
  "getObserverTree" => Set {
    "./internal",
  },
  "_resetGlobalState" => Set {
    "./internal",
  },
  "_getGlobalState" => Set {
    "./internal",
  },
  "getDebugName" => Set {
    "./internal",
  },
  "getAtom" => Set {
    "./internal",
  },
  "_getAdministration" => Set {
    "./internal",
  },
  "_allowStateChanges" => Set {
    "./internal",
  },
  "_allowStateChangesInsideComputed" => Set {
    "./internal",
  },
  "Lambda" => Set {
    "./internal",
  },
  "isArrayLike" => Set {
    "./internal",
  },
  "$mobx" => Set {
    "./internal",
  },
  "_isComputingDerivation" => Set {
    "./internal",
  },
  "onReactionError" => Set {
    "./internal",
  },
  "_interceptReads" => Set {
    "./internal",
  },
  "IComputedValueOptions" => Set {
    "./internal",
  },
  "IActionRunInfo" => Set {
    "./internal",
  },
  "_startAction" => Set {
    "./internal",
  },
  "_endAction" => Set {
    "./internal",
  },
  "_allowStateReadsStart" => Set {
    "./internal",
  },
  "_allowStateReadsEnd" => Set {
    "./internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\modifiers.ts 1`] = `
Map {
  "refStructEnhancer" => Set {
    "../internal",
  },
  "shallowEnhancer" => Set {
    "../internal",
  },
  "deepEnhancer" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\object-api.ts 1`] = `
Map {
  "keys" => Set {
    "../internal",
  },
  "set" => Set {
    "../internal",
  },
  "remove" => Set {
    "../internal",
  },
  "values" => Set {
    "../internal",
  },
  "entries" => Set {
    "../internal",
  },
  "has" => Set {
    "../internal",
  },
  "get" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\observable.ts 1`] = `
Map {
  "endBatch" => Set {
    "../internal",
  },
  "propagateChanged" => Set {
    "../internal",
  },
  "propagateMaybeChanged" => Set {
    "../internal",
  },
  "getObservers" => Set {
    "../internal",
  },
  "addObserver" => Set {
    "../internal",
  },
  "removeObserver" => Set {
    "../internal",
  },
  "propagateChangeConfirmed" => Set {
    "../internal",
  },
  "queueForUnobservation" => Set {
    "../internal",
  },
  "startBatch" => Set {
    "../internal",
  },
  "reportObserved" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\observablearray.ts 1`] = `
Map {
  "createObservableArray" => Set {
    "../internal",
  },
  "isObservableArray" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\observabledecorator.ts 1`] = `
Map {
  "createDecoratorForEnhancer" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\observablemap.ts 1`] = `
Map {
  "isObservableMap" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\observableobject.ts 1`] = `
Map {
  "asObservableObject" => Set {
    "../internal",
  },
  "generateObservablePropConfig" => Set {
    "../internal",
  },
  "isObservableObject" => Set {
    "../internal",
  },
  "generateComputedPropConfig" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\observableset.ts 1`] = `
Map {
  "isObservableSet" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\observablevalue.ts 1`] = `
Map {
  "isObservableValue" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\observe.ts 1`] = `
Map {
  "observe" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\reaction.ts 1`] = `
Map {
  "onReactionError" => Set {
    "../internal",
  },
  "isReaction" => Set {
    "../internal",
  },
  "runReactions" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\spy.ts 1`] = `
Map {
  "spy" => Set {
    "../internal",
  },
  "isSpyEnabled" => Set {
    "../internal",
  },
  "spyReport" => Set {
    "../internal",
  },
  "spyReportStart" => Set {
    "../internal",
  },
  "spyReportEnd" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\tojs.ts 1`] = `
Map {
  "toJS" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\trace.ts 1`] = `
Map {
  "trace" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\transaction.ts 1`] = `
Map {
  "transaction" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\type-utils.ts 1`] = `
Map {
  "getAtom" => Set {
    "../internal",
  },
  "getAdministration" => Set {
    "../internal",
  },
  "getDebugName" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\utils.ts 1`] = `
Map {
  "getMapLikeKeys" => Set {
    "../internal",
  },
  "isArrayLike" => Set {
    "../internal",
  },
  "getNextId" => Set {
    "../internal",
  },
}
`;

exports[`snapshots __tests__\\test-data\\example-src\\when.ts 1`] = `
Map {
  "when" => Set {
    "../internal",
  },
}
`;
